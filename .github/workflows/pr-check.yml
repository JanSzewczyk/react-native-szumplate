name: PR Checks ✅

on:
  pull_request:

env:
  NODE_VERSION: 22.x

jobs:
  prettier:
    name: Prettier 🧹
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Prettier Check 🧹
        run: npm run prettier:check

  lint:
    name: ESlint ⬣
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Install utils ⚙️
        run: npm install @microsoft/eslint-formatter-sarif
      - name: ESlint Check ⬣
        run: npm run lint:ci
        continue-on-error: true
      - name: Upload ESlint results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  type-check:
    name: TypeScript 🛠️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: TypeScript Check 🛠️
        run: npm run type-check

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: on-failure

  bundle-size:
    name: Bundle Size Analysis 📊
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Checkout base branch 📚
        uses: actions/checkout@v5
        with:
          ref: ${{ github.base_ref }}
          path: base
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Export production build 🌐
        run: npx expo export --platform web
      - name: Calculate current bundle size 📊
        id: current-size
        run: |
          CURRENT_SIZE=$(du -sb dist | cut -f1)
          echo "size=$CURRENT_SIZE" >> $GITHUB_OUTPUT
          echo "Current bundle size: $CURRENT_SIZE bytes"
      - name: Install base dependencies ⚙️
        working-directory: base
        run: npm ci
      - name: Export base build 🌐
        working-directory: base
        run: npx expo export --platform web
      - name: Calculate base bundle size 📊
        id: base-size
        run: |
          BASE_SIZE=$(du -sb base/dist | cut -f1)
          echo "size=$BASE_SIZE" >> $GITHUB_OUTPUT
          echo "Base bundle size: $BASE_SIZE bytes"
      - name: Compare bundle sizes and comment 💬
        uses: actions/github-script@v8
        with:
          script: |
            const currentSize = parseInt('${{ steps.current-size.outputs.size }}');
            const baseSize = parseInt('${{ steps.base-size.outputs.size }}');
            const diff = currentSize - baseSize;
            const diffPercent = ((diff / baseSize) * 100).toFixed(2);

            const formatSize = (bytes) => {
              if (bytes < 1024) return bytes + ' B';
              if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB';
              return (bytes / (1024 * 1024)).toFixed(2) + ' MB';
            };

            const emoji = diff > 0 ? '📈' : diff < 0 ? '📉' : '➡️';
            const status = Math.abs(diffPercent) < 1 ? '✅' : diff > 0 ? '⚠️' : '✅';

            const body = `## ${status} Bundle Size Analysis ${emoji}

            | Metric | Size | Change |
            |--------|------|--------|
            | **Current** | ${formatSize(currentSize)} | - |
            | **Base (${context.payload.pull_request.base.ref})** | ${formatSize(baseSize)} | - |
            | **Difference** | ${formatSize(Math.abs(diff))} | ${diffPercent > 0 ? '+' : ''}${diffPercent}% |

            ${Math.abs(diff) < 1024 ? '✅ Bundle size change is negligible' :
              diff > 0 ? '⚠️ Bundle size increased' : '✅ Bundle size decreased'}
            `;

            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const bundleSizeComment = comments.data.find(comment => 
              comment.body.includes('Bundle Size Analysis')
            );

            if (bundleSizeComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: bundleSizeComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
  expo-doctor:
    name: Expo Doctor 🏥
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Run Expo Doctor 🏥
        run: npx expo-doctor

  build-validation:
    name: Build Validation 🏗️
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [web, android]
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Set up Java (for Android) ☕
        if: matrix.platform == 'android'
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Prebuild ${{ matrix.platform }} 🏗️
        if: matrix.platform == 'android'
        run: npx expo prebuild --platform android --clean
      - name: Build web 🌐
        if: matrix.platform == 'web'
        run: npx expo export --platform web
      - name: Check Android build files
        if: matrix.platform == 'android'
        run: |
          if [ ! -d "android" ]; then
            echo "Android directory not generated"
            exit 1
          fi
          echo "Android prebuild successful"

  license-compliance:
    name: License Compliance ⚖️
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v5
      - name: Set up Node 🟢
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Check licenses ⚖️
        run: |
          npx license-checker --summary --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;CC0-1.0;Unlicense;Python-2.0" || echo "⚠️ Some dependencies have licenses that need review"
